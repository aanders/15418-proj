#!/bin/bash
#
# Cretae a bunch of trace files using the generator with
# different parameter sets
#

#
# User-specified parameters
#
# PARAMS -- one trace will be generated for each parameter
#           set specified here
# 
# NAMES  -- name for the trace file generated by the
#           corresponding entry in PARAMS (optional)
#           If a name is not specified, it will be test.n.trace
#           where n is a unique number over all the traces generated

PARAMS=(
    # -l <trace-length> -t <datatype> -b <bias> -d <avg-delay> -s <stddev-delay>
    "-l 10     -t int  -b insert  -d 100 -s 30"
    "-l 10     -t char -b uniform -d 100 -s 30"
    "-l 10     -t int  -b lookup  -d 100 -s 30"
)

NAMES=(
    "sample.trace"
    "sample2.trace"
)

#
# Main generator script
#

TRACEDIR=traces
COUNTER=0

function usage() {
    echo "usage: $0 <output-dir>"
    echo "  <output-dir> : subdirectory to be created under the main traces/"
    echo "                 directory, which will hold the generated traces"
    echo "                 The program will exit with an error if <output-dir>"
    echo "                 already exists."
    echo ""
}

if [[ $# < 1 ]] ; then
    usage
    exit 1
fi

if [ -d $TRACEDIR/$1 ] ; then
    echo "Output destination $TRACEDIR/$1 already exists!  Aborting."
    exit 2
else
    mkdir -p $TRACEDIR/$1
fi

for paramset in "${PARAMS[@]}"; do
    if [[ $COUNTER < ${#NAMES[@]} ]]; then
        name=${NAMES[$COUNTER]}
    else
        name="test.$COUNTER.trace"
    fi
    COUNTER=$(($COUNTER + 1))
    scripts/tracegen.py $paramset > $TRACEDIR/$1/$name
done
